name: Build Sycomore
on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    name: ${{ matrix.container || matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: "ubuntu-latest", packaging: "conda", python: "python" }
          - { os: "macos-latest", packaging: "conda", python: "python" }
          - { os: "windows-latest", packaging: "conda", python: "python" }
    env:
      WORKSPACE: "${{ github.workspace }}"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Provision (Conda, Ubuntu)
        # conda is initialized in .bashrc, but we are not using a login shell
        run: echo 'export PATH="/usr/share/miniconda/bin:$PATH"' >> $HOME/.bash_profile
        if: ${{ matrix.packaging == 'conda' && contains(matrix.os, 'ubuntu') }}
      
      - name: Provision (Conda, Windows)
        run: C:\Miniconda\condabin\conda.bat init --all
        shell: pwsh
        if: ${{ matrix.packaging == 'conda' && contains(matrix.os, 'windows') }}
      
      - name: Provision (Conda, non-Windows)
        run: conda init --all
        if: ${{ matrix.packaging == 'conda' && !contains(matrix.os, 'windows') }}
      
      - name: Checkout latest revision
        # Only the latest revision is required, as later steps do not depend on
        # tags.
        run: |
          git config --global init.defaultBranch master
          git config --global --add safe.directory '*'
          git init .
          git remote add origin ${{ github.server_url }}/${{ github.repository }}
          git fetch origin --depth=1 ${{ github.ref }}
          git checkout ${{ github.ref_name }}
      
      - name: Set-up (${{ matrix.packaging }})
        run: ${{ matrix.python }} .ci/build/${{ matrix.packaging }}.py
      
      - name: Build sycomore
        run: ${{ matrix.python }} ./.ci/build/build.py
      
      - name: Run tests
        run: ${{ matrix.python }} ./.ci/build/post_build.py
